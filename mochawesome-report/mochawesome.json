{
  "stats": {
    "suites": 2,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-13T11:33:52.369Z",
    "end": "2023-10-13T11:33:53.580Z",
    "duration": 1211,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1f4b4670-0832-4212-a3a7-deb37859b227",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5f646be5-464f-4c9f-8a37-db229e4f3584",
          "title": "API Test Suite to test the negative outcomes of POST/PUT/DELETE/GET",
          "fullFile": "C:\\Users\\Charles_Adair\\Documents\\Automation-js-mentoring\\specs\\negative.test.spec.js",
          "file": "\\specs\\negative.test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET - Testing the the retrieval of data from the posts folder that does not exist",
              "fullTitle": "API Test Suite to test the negative outcomes of POST/PUT/DELETE/GET GET - Testing the the retrieval of data from the posts folder that does not exist",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await sendRequest('posts/0');\nexpect(response.status).to.equal(404);",
              "err": {},
              "uuid": "31cb9845-995b-4fc4-964b-be909abe8bf0",
              "parentUUID": "5f646be5-464f-4c9f-8a37-db229e4f3584",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Testing the creation of a post with invalid data",
              "fullTitle": "API Test Suite to test the negative outcomes of POST/PUT/DELETE/GET POST - Testing the creation of a post with invalid data",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const invalidData = {\n    1:1\n};\nconst response = await sendRequest(invalidData, 'POST');\nexpect(response.status).to.equal(404);",
              "err": {},
              "uuid": "1a59618a-ca11-400a-9f56-a2380dcf1a7f",
              "parentUUID": "5f646be5-464f-4c9f-8a37-db229e4f3584",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Testing an edit of a post that does not exist",
              "fullTitle": "API Test Suite to test the negative outcomes of POST/PUT/DELETE/GET PUT - Testing an edit of a post that does not exist",
              "timedOut": false,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await sendRequest('posts/-0', testData, 'PUT');\nexpect(response.status).to.equal(500);",
              "err": {},
              "uuid": "ecef439a-b5f2-42c8-94d8-011c04b33c98",
              "parentUUID": "5f646be5-464f-4c9f-8a37-db229e4f3584",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Testing the deletion of a post that does not exist",
              "fullTitle": "API Test Suite to test the negative outcomes of POST/PUT/DELETE/GET DELETE - Testing the deletion of a post that does not exist",
              "timedOut": false,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await sendRequest('2', null, 'DELETE');\nexpect(response.status).to.equal(404);",
              "err": {},
              "uuid": "a74fcab7-7052-49b4-ab68-3d5622ba56e6",
              "parentUUID": "5f646be5-464f-4c9f-8a37-db229e4f3584",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31cb9845-995b-4fc4-964b-be909abe8bf0",
            "1a59618a-ca11-400a-9f56-a2380dcf1a7f",
            "ecef439a-b5f2-42c8-94d8-011c04b33c98",
            "a74fcab7-7052-49b4-ab68-3d5622ba56e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 544,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a674913f-0a8e-4ed1-89d1-853d8c6a1e17",
          "title": "API Test Suite to test the positive outcomes of POST/PUT/DELETE/GET",
          "fullFile": "C:\\Users\\Charles_Adair\\Documents\\Automation-js-mentoring\\specs\\positive.test.spec.js",
          "file": "\\specs\\positive.test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET - Retrieve post information from the first entry of the posts folder",
              "fullTitle": "API Test Suite to test the positive outcomes of POST/PUT/DELETE/GET GET - Retrieve post information from the first entry of the posts folder",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await sendRequest('posts/1');\nexpect(response.data.userId).to.equal(1);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "39c11bc5-007e-4c22-b670-1d31ec12fa67",
              "parentUUID": "a674913f-0a8e-4ed1-89d1-853d8c6a1e17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Create new post in the posts folder",
              "fullTitle": "API Test Suite to test the positive outcomes of POST/PUT/DELETE/GET POST - Create new post in the posts folder",
              "timedOut": false,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await sendRequest('posts', testData, 'POST');\nexpect(response.status).to.equal(201);",
              "err": {},
              "uuid": "43a54e15-5b16-4f82-8d19-dd632d8f00a4",
              "parentUUID": "a674913f-0a8e-4ed1-89d1-853d8c6a1e17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Edit the first entry of the post folder using test data",
              "fullTitle": "API Test Suite to test the positive outcomes of POST/PUT/DELETE/GET PUT - Edit the first entry of the post folder using test data",
              "timedOut": false,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await sendRequest('posts/1', testData, 'PUT');\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "3f727de4-b1f5-41e8-aa32-c48c698a5666",
              "parentUUID": "a674913f-0a8e-4ed1-89d1-853d8c6a1e17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete the first entry of the posts folder",
              "fullTitle": "API Test Suite to test the positive outcomes of POST/PUT/DELETE/GET DELETE - Delete the first entry of the posts folder",
              "timedOut": false,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await sendRequest('posts/0', null, 'DELETE');\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "7f1ed012-50ad-4303-95a9-3b0eb95b784b",
              "parentUUID": "a674913f-0a8e-4ed1-89d1-853d8c6a1e17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39c11bc5-007e-4c22-b670-1d31ec12fa67",
            "43a54e15-5b16-4f82-8d19-dd632d8f00a4",
            "3f727de4-b1f5-41e8-aa32-c48c698a5666",
            "7f1ed012-50ad-4303-95a9-3b0eb95b784b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 647,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}